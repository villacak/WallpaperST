package au.com.main;

import java.io.IOException;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import android.app.AlertDialog;
import android.app.ListActivity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.res.Resources.NotFoundException;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import au.com.bean.ImageFieldText;


public class ImageList extends ListActivity {

	private static final String ST_PICTURE = "st";
	private static final String MAIN_R = "au.com.main.R.drawable";
	private static final String TAG = "APP_TAG";

	private static List<ImageFieldText> directoryEntries = new ArrayList<ImageFieldText>();

	@SuppressWarnings("unused")
	private static TextView textView;

	@SuppressWarnings("unused")
	private static ImageView imageView;
	private static Context ctx;
	private static Class<R> rDrawable;
	
	protected static int clikedPos;


	@Override
	public void onCreate(Bundle icicle) {
		super.onCreate(icicle);

		imageView = (ImageView) findViewById(R.id.imagelist);
		textView = (TextView) findViewById(R.id.txtlabels);

		loadData();
	}


	private void loadData() {
		ImageList.directoryEntries.clear();
		try {
			Thread.sleep(10);
		} catch (InterruptedException e1) {
			e1.printStackTrace();
		}

		ImageList.ctx = this.getApplicationContext();
		Class<R> rClass = R.class;
		ImageList.rDrawable = getDrawable(rClass);

		ImageList.directoryEntries.clear();
		ImageList.directoryEntries = getListReady(ImageList.rDrawable);

		Collections.sort(ImageList.directoryEntries);

		ImageFiedTextListAdapter itla = new ImageFiedTextListAdapter(this);
		itla.setListItems(ImageList.directoryEntries);
		this.setListAdapter(itla);
	}


	@SuppressWarnings({ "rawtypes", "unchecked" })
	public static Class<R> getDrawable(Class<R> rClass) {
		Class<R> returnRClass = null;
		if (rClass == null) {
			return null;
		}
		Class[] subClasses = rClass.getDeclaredClasses();
		for (Class<R> subclass : subClasses) {
			if (MAIN_R.equals(subclass.getCanonicalName())) {
				returnRClass = subclass;
				break;
			}
		}
		return returnRClass;
	}


	public List<ImageFieldText> getListReady(Class<R> drawableClass) {
		List<ImageFieldText> drInfo = new ArrayList<ImageFieldText>();
		if (drawableClass == null) {
			return drInfo;
		}
		Field[] fields = drawableClass.getFields();
		for (Field dr : fields) {
			if (dr.getName().contains(ST_PICTURE)) {
				ImageFieldText bean = null;
				try {
					bean = new ImageFieldText(dr.getName(), dr.getInt(null) ,getResources().getDrawable(dr.getInt(null)));
				} catch (NotFoundException e) {
					Log.e(TAG, e.getMessage());
				} catch (IllegalArgumentException e) {
					Log.e(TAG, e.getMessage());
				} catch (IllegalAccessException e) {
					Log.e(TAG, e.getMessage());
				}
				drInfo.add(bean);
			}
		}
		return drInfo;
	}


	/*
	 * (non-Javadoc)
	 * 
	 * @see android.app.ListActivity#onListItemClick(android.widget.ListView, android.view.View, int, long)
	 */
	@Override
	protected void onListItemClick(ListView l, View v, int position, long id) {
		ImageList.clikedPos = position;
		AlertDialog.Builder alt_bld = new AlertDialog.Builder(this);
		alt_bld.setMessage("Set as wallpaper?").setCancelable(false)
				.setPositiveButton("Ok", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int id) {
						Bitmap wallpaper = null;
						ImageFieldText objImg = ImageList.directoryEntries.get(ImageList.clikedPos);
						try {
							wallpaper = BitmapFactory.decodeResource(ImageList.ctx.getResources(),
									objImg.getmNumberImg());
							ImageList.ctx.setWallpaper(wallpaper);
						} catch (IllegalArgumentException e) {
							Log.e(TAG, e.getMessage());
						} catch (IOException e) {
							Log.e(TAG, e.getMessage());
						} catch (SecurityException e) {
							Log.e(TAG, e.getMessage());
						}
					}
				}).setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int id) {
						return;
					}
				});
		AlertDialog alert = alt_bld.create();
		alert.setIcon(R.drawable.tng);
		alert.setTitle("Wallpaper update");
		alert.show();
		super.onListItemClick(l, v, position, id);
	}
}
